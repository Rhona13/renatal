/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Admindashboard;

import Config.DBConnector;
import static com.sun.webkit.perf.WCFontPerfLogger.reset;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.plaf.basic.BasicInternalFrameUI;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author scc-college
 */
public class RegTenants extends javax.swing.JInternalFrame {

    /**
     * Creates new form RegTenants
     */
    public RegTenants() {
        initComponents();
        this.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        BasicInternalFrameUI bi = (BasicInternalFrameUI) this.getUI();
        bi.setNorthPane(null);
         displayData();
         dt();
    }
    public void dt (){
        Date d = new Date();
        SimpleDateFormat sdf = new SimpleDateFormat("MM-dd-yyyy");
        String dd = sdf.format(d);
        od.setText(dd);
    
    }
    
    
    
     public void displayData() {
        try {

            DBConnector dbc = new DBConnector();
            ResultSet rs = dbc.getData("SELECT * FROM occupant");
            t_able.setModel(DbUtils.resultSetToTableModel(rs));

        } catch (SQLException ex) {
            System.out.println("Error Message: " + ex);

        }


    }

    public void reset() {
        oid.setText("");
        ofn.setText("");
        oln.setText("");
        ocn.setText("");
        onm.setSelectedItem("0");
        od.setText("");
       
       

    }
     Color navcolor = new Color(255, 204, 255);
    Color hovercolor = new Color(255, 0, 102);

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel8 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        oid = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        ofn = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        oln = new javax.swing.JTextField();
        jLabel13 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        jTextField5 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jTextField6 = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jLabel17 = new javax.swing.JLabel();
        jTextField7 = new javax.swing.JTextField();
        jLabel18 = new javax.swing.JLabel();
        jTextField8 = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        onm = new javax.swing.JComboBox<>();
        ocn = new javax.swing.JTextField();
        p_add = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        p_edit = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        delete = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        od = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        t_able = new javax.swing.JTable();
        search = new javax.swing.JTextField();
        refresh = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();

        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(255, 204, 204));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel8.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel8.setText("Date Started");
        jPanel3.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 480, 170, 34));

        jLabel10.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel10.setText("Occupant ID");
        jPanel3.add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 100, 121, 34));

        oid.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel3.add(oid, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 140, 260, 30));

        jLabel9.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel9.setText("Contact Number");
        jPanel3.add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 330, 170, 34));

        jLabel12.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel12.setText("First Name");
        jPanel3.add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 121, 34));

        ofn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel3.add(ofn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 260, 30));

        jLabel11.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel11.setText("Last Name");
        jPanel3.add(jLabel11, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 250, 121, 34));

        oln.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel3.add(oln, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 290, 260, 30));

        jLabel13.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        jLabel13.setText("Number of Members");
        jPanel3.add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 400, 190, 34));

        jPanel4.setBackground(new java.awt.Color(255, 255, 255));
        jPanel4.setLayout(null);

        jLabel14.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel14.setText("Price");
        jPanel4.add(jLabel14);
        jLabel14.setBounds(20, 590, 190, 34);

        jTextField5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel4.add(jTextField5);
        jTextField5.setBounds(10, 430, 390, 50);

        jLabel15.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel15.setText("Occupant ID");
        jPanel4.add(jLabel15);
        jLabel15.setBounds(20, 90, 121, 34);

        jTextField6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel4.add(jTextField6);
        jTextField6.setBounds(10, 130, 390, 50);

        jLabel16.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel16.setText("Contact Number");
        jPanel4.add(jLabel16);
        jLabel16.setBounds(20, 390, 170, 34);

        jComboBox2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));
        jPanel4.add(jComboBox2);
        jComboBox2.setBounds(10, 530, 390, 50);

        jLabel17.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel17.setText("First Name");
        jPanel4.add(jLabel17);
        jLabel17.setBounds(20, 190, 121, 34);

        jTextField7.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel4.add(jTextField7);
        jTextField7.setBounds(10, 230, 390, 50);

        jLabel18.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel18.setText("Last Name");
        jPanel4.add(jLabel18);
        jLabel18.setBounds(20, 290, 121, 34);

        jTextField8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel4.add(jTextField8);
        jTextField8.setBounds(10, 330, 390, 50);

        jLabel19.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel19.setText("Number of Members");
        jPanel4.add(jLabel19);
        jLabel19.setBounds(20, 490, 190, 34);

        jPanel3.add(jPanel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 0, 0));

        onm.setFont(new java.awt.Font("Tahoma", 1, 15)); // NOI18N
        onm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1", "2", "3", "4", "5", "6", "7", "8", "9", "10", "None" }));
        jPanel3.add(onm, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 440, 260, 30));

        ocn.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel3.add(ocn, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 370, 260, 30));

        p_add.setBackground(new java.awt.Color(255, 204, 255));
        p_add.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p_addMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                p_addMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                p_addMouseExited(evt);
            }
        });
        p_add.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel6.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel6.setText("ADD");
        p_add.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 0, 60, 40));

        jPanel3.add(p_add, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 570, 120, 40));

        p_edit.setBackground(new java.awt.Color(255, 204, 255));
        p_edit.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                p_editMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                p_editMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                p_editMouseExited(evt);
            }
        });
        p_edit.setLayout(null);

        jLabel7.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel7.setText("UPDATE");
        p_edit.add(jLabel7);
        jLabel7.setBounds(20, 0, 79, 40);

        jPanel3.add(p_edit, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 570, 120, 40));

        delete.setBackground(new java.awt.Color(255, 204, 255));
        delete.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                deleteMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                deleteMouseExited(evt);
            }
        });
        delete.setLayout(null);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("DELETE");
        delete.add(jLabel2);
        jLabel2.setBounds(20, 0, 90, 40);

        jPanel3.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 630, 120, 40));

        od.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jPanel3.add(od, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 520, 260, -1));

        jPanel2.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -60, 290, 700));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 24)); // NOI18N
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("TENANTS REGISTRATION");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 70, 370, 50));

        t_able.setBackground(new java.awt.Color(255, 102, 102));
        t_able.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        t_able.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        t_able.setGridColor(new java.awt.Color(204, 0, 102));
        t_able.setRowHeight(25);
        t_able.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                t_ableMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(t_able);

        jPanel2.add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 310, 570, 280));

        search.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        search.setText("SEARCH");
        search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchMouseClicked(evt);
            }
        });
        search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchActionPerformed(evt);
            }
        });
        search.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                searchKeyPressed(evt);
            }
        });
        jPanel2.add(search, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 190, 520, 30));

        refresh.setBackground(new java.awt.Color(255, 204, 255));
        refresh.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                refreshMouseClicked(evt);
            }
        });
        refresh.setLayout(null);

        jLabel20.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel20.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel20.setText("REFRESH");
        refresh.add(jLabel20);
        jLabel20.setBounds(30, 0, 90, 40);

        jPanel2.add(refresh, new org.netbeans.lib.awtextra.AbsoluteConstraints(690, 250, 140, 40));

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -20, 880, 640));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_searchActionPerformed

    private void deleteMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseClicked
         int rowIndex = t_able.getSelectedRow();

        if (rowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please select an item to delete!");
        } else {
            int confirm = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete this record?", "Confirm Deletion", JOptionPane.YES_NO_OPTION);
            if (confirm == JOptionPane.YES_OPTION) {
                Connection connection = null;
                PreparedStatement preparedStatement = null;

                try {
                    DBConnector dbConnector = new DBConnector();
                    connection = dbConnector.getConnection();

                    TableModel tbl = t_able.getModel();
                    String selectedId = tbl.getValueAt(rowIndex, 0).toString();

                    String deleteQuery = "DELETE FROM occupant WHERE o_id = ?";
                    preparedStatement = connection.prepareStatement(deleteQuery);
                    preparedStatement.setString(1, selectedId);

                    int rowsAffected = preparedStatement.executeUpdate();

                    if (rowsAffected > 0) {
                        JOptionPane.showMessageDialog(null, "Record deleted successfully!");
                        displayData();
                    } else {
                        JOptionPane.showMessageDialog(null, "No data found for the selected item.");
                    }
                } catch (SQLException ex) {
                    JOptionPane.showMessageDialog(null, "Error deleting data: " + ex.getMessage());
                } finally {
                    try {
                        if (preparedStatement != null) {
                            preparedStatement.close();
                        }
                        if (connection != null) {
                            connection.close();
                        }
                    } catch (SQLException ex) {
                        JOptionPane.showMessageDialog(null, "Error deleting data: " + ex.getMessage());
                    }
                }
            }
        }
    }//GEN-LAST:event_deleteMouseClicked

    private void p_addMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p_addMouseClicked
         if (oid.getText().isEmpty() || ofn.getText().isEmpty() || oln.getText().isEmpty()
                || ocn.getText().isEmpty() ) {
            JOptionPane.showMessageDialog(null, "All fields are required!");
            displayData();
            return;
        }

        Connection connection = null;
        PreparedStatement preparedStatement = null;

        try {
            DBConnector dbc = new DBConnector();
            connection = dbc.getConnection();

            String insertQuery = "INSERT INTO occupant (o_id, o_firstname, o_lastname, o_contact, o_members, o_date) "
                    + "VALUES (?, ?, ?, ?, ?, ?)";

            preparedStatement = connection.prepareStatement(insertQuery);

            preparedStatement.setString(1, oid.getText());
            preparedStatement.setString(2, ofn.getText());
            preparedStatement.setString(3, oln.getText());
            preparedStatement.setString(4, ocn.getText());
            preparedStatement.setString(5, onm.getSelectedItem().toString());
            preparedStatement.setString(6, od.getText());

            int rowsAffected = preparedStatement.executeUpdate();

            if (rowsAffected > 0) {
                JOptionPane.showMessageDialog(null, "Record inserted successfully!");
            } else {
                JOptionPane.showMessageDialog(null, "Failed to insert the record.");
            }

            displayData();
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Error inserting data: " + ex.getMessage());
        } finally {
            try {
                if (preparedStatement != null) {
                    preparedStatement.close();
                }
                if (connection != null) {
                    connection.close();
                }
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error inserting data: " + ex.getMessage());
            }
        }
    }//GEN-LAST:event_p_addMouseClicked

    private void p_editMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p_editMouseClicked
       
            DBConnector dbc = new DBConnector();
            int num = dbc.updateData("UPDATE occupant SET o_firstname "
                    + "= '" + ofn.getText() + "', o_lastname = '" + oln.getText() + "', o_contact "
                    + "= '" + ocn.getText() + "', o_members = '" + onm.getSelectedItem() + "', o_date = '" + od.getText()+ "' WHERE o_id = '" + oid.getText() + "'");
            if (num == 0) {

            } else {
                JOptionPane.showMessageDialog(null, "Updated successfully");
                displayData();
                reset();
            }
    }//GEN-LAST:event_p_editMouseClicked

    private void searchKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_searchKeyPressed
          DefaultTableModel tbl = (DefaultTableModel) t_able.getModel();
        TableRowSorter<DefaultTableModel> obj = new TableRowSorter<>(tbl);
        t_able.setRowSorter(obj);
        obj.setRowFilter(RowFilter.regexFilter(search.getText()));
    }//GEN-LAST:event_searchKeyPressed

    private void searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchMouseClicked
          search.setText("");
    }//GEN-LAST:event_searchMouseClicked

    private void t_ableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_t_ableMouseClicked
          int rowIndex = t_able.getSelectedRow();
        if (rowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Please Select an Item!");
        } else {
            TableModel model = t_able.getModel();

            String id = model.getValueAt(rowIndex, 0).toString();
            String fn = model.getValueAt(rowIndex, 1).toString();
            String ln = model.getValueAt(rowIndex, 2).toString();
            String cn = model.getValueAt(rowIndex, 3).toString();
            String nm = model.getValueAt(rowIndex, 4).toString();
            String d = model.getValueAt(rowIndex, 5).toString();

            oid.setText(id);
            ofn.setText(fn);
            oln.setText(ln);
            ocn.setText(cn);
            onm.setSelectedItem(nm);
            od.setText(d);
        }
    }//GEN-LAST:event_t_ableMouseClicked

    private void refreshMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_refreshMouseClicked
          displayData();
    }//GEN-LAST:event_refreshMouseClicked

    private void p_addMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p_addMouseEntered
        p_add.setBackground(hovercolor);
    }//GEN-LAST:event_p_addMouseEntered

    private void p_addMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p_addMouseExited
         p_add.setBackground(navcolor);
    }//GEN-LAST:event_p_addMouseExited

    private void p_editMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p_editMouseEntered
        p_edit.setBackground(hovercolor);
    }//GEN-LAST:event_p_editMouseEntered

    private void p_editMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_p_editMouseExited
         p_edit.setBackground(navcolor);
    }//GEN-LAST:event_p_editMouseExited

    private void deleteMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseEntered
         delete.setBackground(hovercolor);
    }//GEN-LAST:event_deleteMouseEntered

    private void deleteMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteMouseExited
          delete.setBackground(navcolor);
    }//GEN-LAST:event_deleteMouseExited


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel delete;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextField jTextField5;
    private javax.swing.JTextField jTextField6;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    private javax.swing.JTextField ocn;
    private javax.swing.JTextField od;
    private javax.swing.JTextField ofn;
    private javax.swing.JTextField oid;
    private javax.swing.JTextField oln;
    private javax.swing.JComboBox<String> onm;
    private javax.swing.JPanel p_add;
    private javax.swing.JPanel p_edit;
    private javax.swing.JPanel refresh;
    private javax.swing.JTextField search;
    private javax.swing.JTable t_able;
    // End of variables declaration//GEN-END:variables
}
